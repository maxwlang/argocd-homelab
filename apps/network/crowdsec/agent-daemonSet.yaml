apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: crowdsec-agent
  labels:
    k8s-app: crowdsec
    type: agent
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: crowdsec
      type: agent
  template:
    metadata:
      labels:
        k8s-app: crowdsec
        type: agent
        version: v1
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      initContainers:
      - name: wait-for-lapi
        image: "busybox:1.28"
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', "until nc crowdsec-service.network 8080; do echo waiting for lapi to start; sleep 5; done"]
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 1m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
      containers:
      - name: crowdsec-agent
        image: "ghcr.io/crowdsecurity/crowdsec:v1.5.5"
        imagePullPolicy: IfNotPresent
        env:
          - name: DISABLE_LOCAL_API
            value: "true"
          - name: DISABLE_ONLINE_API
            value: "true"

          # agent - lapi authentication, with TLS or password
          - name: LOCAL_API_URL
            value: http://crowdsec-service.network:8080
          - name: AGENT_USERNAME
            valueFrom:
              secretKeyRef:
                name: agent-credentials
                key: username
          - name: AGENT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: agent-credentials
                key: password
          - name: TZ
            value: America/Chicago
          - name: DISABLE_ONLINE_API
            value: "false"
          - name: COLLECTIONS
            value: crowdsecurity/linux crowdsecurity/sshd crowdsecurity/base-http-scenarios
              crowdsecurity/http-cve
          - name: PARSERS
            value: crowdsecurity/cri-logs crowdsecurity/docker-logs
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 150m
            memory: 100Mi
        
        ports:
          - name: metrics
            containerPort: 6060
            protocol: TCP

        securityContext:
          allowPrivilegeEscalation: false
          privileged: false

        volumeMounts:          
          - name: acquis-config-volume
            mountPath: /etc/crowdsec/acquis.yaml
            subPath: acquis.yaml
          - name: varlog
            mountPath: /var/log
            readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: acquis-config-volume
        configMap:
          name: acquis-configmap
      - name: varlog
        hostPath:
          path: /var/log
